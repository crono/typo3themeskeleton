{"version":3,"sources":["pushbar.js"],"names":["Pushbar","constructor","config","overlay","blur","activeBar","document","createElement","classList","add","querySelector","appendChild","mainContent","bindEvents","opened","HTMLElement","contains","activeBarId","getAttribute","dispatchOpen","pushbar","event","CustomEvent","bubbles","detail","dispatchEvent","dispatchClose","findElementById","pushbarId","handleOpenEvent","e","preventDefault","currentTarget","open","handleCloseEvent","close","handleKeyEvent","keyCode","triggers","querySelectorAll","closers","forEach","trigger","addEventListener","closer","Root","setAttribute","remove","removeAttribute"],"mappings":"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","sourcesContent":["class Pushbar {\r\n    constructor(config = {\r\n        overlay: true,\r\n        blur: false\r\n    }) {\r\n        this.activeBar = null;\r\n        this.overlay = false;\r\n\r\n        if (config.overlay) {\r\n            this.overlay = document.createElement('div');\r\n            this.overlay.classList.add('pushbar_overlay');\r\n            document.querySelector('body').appendChild(this.overlay);\r\n        }\r\n\r\n        if (config.blur) {\r\n            const mainContent = document.querySelector('.pushbar_main_content');\r\n            if (mainContent) {\r\n                mainContent.classList.add('pushbar_blur');\r\n            }\r\n        }\r\n\r\n        this.bindEvents();\r\n    }\r\n\r\n    get opened() {\r\n        const {\r\n            activeBar\r\n        } = this;\r\n        return Boolean(activeBar instanceof HTMLElement && activeBar.classList.contains('opened'));\r\n    }\r\n\r\n    get activeBarId() {\r\n        const {\r\n            activeBar\r\n        } = this;\r\n        return activeBar instanceof HTMLElement && activeBar.getAttribute('data-pushbar-id');\r\n    }\r\n\r\n    static dispatchOpen(pushbar) {\r\n        const event = new CustomEvent('pushbar_opening', {\r\n            bubbles: true,\r\n            detail: {\r\n                pushbar\r\n            }\r\n        });\r\n        pushbar.dispatchEvent(event);\r\n    }\r\n\r\n    static dispatchClose(pushbar) {\r\n        const event = new CustomEvent('pushbar_closing', {\r\n            bubbles: true,\r\n            detail: {\r\n                pushbar\r\n            }\r\n        });\r\n        pushbar.dispatchEvent(event);\r\n    }\r\n\r\n    static findElementById(pushbarId) {\r\n        return document.querySelector(`[data-pushbar-id=\"${pushbarId}\"]`);\r\n    }\r\n\r\n    handleOpenEvent(e) {\r\n        e.preventDefault();\r\n        const pushbarId = e.currentTarget.getAttribute('data-pushbar-target');\r\n        if (pushbarId) {\r\n            this.open(pushbarId);\r\n        }\r\n    }\r\n\r\n    handleCloseEvent(e) {\r\n        e.preventDefault();\r\n        this.close();\r\n    }\r\n\r\n    handleKeyEvent(e) {\r\n        if (this.opened && e.keyCode === 27) {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    bindEvents() {\r\n        const triggers = document.querySelectorAll('[data-pushbar-target]');\r\n        const closers = document.querySelectorAll('[data-pushbar-close]');\r\n\r\n        triggers.forEach(trigger => trigger.addEventListener('click', e => this.handleOpenEvent(e), false));\r\n        closers.forEach(closer => closer.addEventListener('click', e => this.handleCloseEvent(e), false));\r\n\r\n        if (this.overlay) {\r\n            this.overlay.addEventListener('click', e => this.handleCloseEvent(e), false);\r\n        }\r\n        document.addEventListener('keyup', e => this.handleKeyEvent(e));\r\n    }\r\n\r\n    open(pushbarId) {\r\n        // Current bar is already opened\r\n        if (String(pushbarId) === this.activeBarId && this.opened) {\r\n            return;\r\n        }\r\n\r\n        // Get new pushbar target\r\n        const pushbar = Pushbar.findElementById(pushbarId);\r\n\r\n        if (!pushbar) return;\r\n\r\n        // Close active bar (if exists)\r\n        if (this.opened) {\r\n            this.close();\r\n        }\r\n\r\n        Pushbar.dispatchOpen(pushbar);\r\n        pushbar.classList.add('opened');\r\n\r\n        const Root = document.querySelector('html');\r\n        Root.classList.add('pushbar_locked');\r\n        Root.setAttribute('pushbar', pushbarId);\r\n        this.activeBar = pushbar;\r\n    }\r\n\r\n    close() {\r\n        const {\r\n            activeBar\r\n        } = this;\r\n        if (!activeBar) return;\r\n\r\n        Pushbar.dispatchClose(activeBar);\r\n        activeBar.classList.remove('opened');\r\n\r\n        const Root = document.querySelector('html');\r\n        Root.classList.remove('pushbar_locked');\r\n        Root.removeAttribute('pushbar');\r\n\r\n        this.activeBar = null;\r\n    }\r\n}\r\n"],"file":"../../Libs/pushbar.min.js"}